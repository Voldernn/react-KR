{"ast":null,"code":"var _jsxFileName = \"E:\\\\kursach\\\\books-react\\\\src\\\\props\\\\BookList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport BookCard from './BookCard';\nimport BookPage from './BookPage';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MongoClient = require('mongodb');\nconst client = new MongoClient('mongodb+srv://voldern:qwerty123@react-books.giltyrb.mongodb.net/?retryWrites=true&w=majority&appName=react-books');\nasync function run() {\n  try {\n    await MongoClient.connect();\n    const db = client.db(\"react-books\");\n    const collection = db.collection(\"books\");\n    const results = await collection.find().toArray();\n    console.log(results);\n  } catch (err) {\n    console.log(err);\n  } finally {\n    await mongoClient.close();\n  }\n}\nconst books = [{\n  id: 1,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 2,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 3,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 4,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 5,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 6,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 7,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 8,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 9,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 10,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}];\nconst getBookById = id => {\n  return books.find(book => book.id === parseInt(id));\n};\nconst BookList = props => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const book = getBookById(id);\n  if (!id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-list\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        link: `/books/${book.id}`,\n        name: book.name,\n        author: book.author,\n        image: book.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this);\n  }\n  ;\n  if (!book) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Book not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    name,\n    author,\n    image,\n    description\n  } = book;\n  return /*#__PURE__*/_jsxDEV(BookPage, {\n    name: name,\n    author: author,\n    image: image,\n    description: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","BookCard","BookPage","useParams","jsxDEV","_jsxDEV","MongoClient","require","client","run","connect","db","collection","results","find","toArray","console","log","err","mongoClient","close","books","id","name","author","image","description","getBookById","book","parseInt","BookList","props","_s","className","children","map","link","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/kursach/books-react/src/props/BookList.js"],"sourcesContent":["import React from 'react';\r\nimport BookCard from './BookCard';\r\nimport BookPage from './BookPage';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nconst MongoClient = require('mongodb');\r\nconst client = new MongoClient('mongodb+srv://voldern:qwerty123@react-books.giltyrb.mongodb.net/?retryWrites=true&w=majority&appName=react-books');\r\n\r\nasync function run() {\r\n  try {\r\n      await MongoClient.connect();\r\n      const db = client.db(\"react-books\");\r\n      const collection = db.collection(\"books\");\r\n      const results = await collection.find().toArray();\r\n      console.log(results);\r\n  }catch(err) {\r\n      console.log(err);\r\n  } finally {\r\n      await mongoClient.close();\r\n  }\r\n}\r\nconst books = [\r\n  {id: 1, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 2, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 3, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 4, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 5, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 6, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 7, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 8, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 9, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 10, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},]\r\n\r\nconst getBookById = (id) => {\r\n  return books.find((book) => book.id === parseInt(id));\r\n};\r\n\r\nconst BookList = (props) => {\r\n  const { id } = useParams();\r\n  const book = getBookById(id);\r\n  if (!(id)){\r\n    return ( <div className=\"book-list\">\r\n    {books.map(book => (\r\n      <BookCard link={`/books/${book.id}`} name={book.name}\r\n      author={book.author} image={book.image} /> ))}\r\n      </div> );\r\n    };\r\n  if (!book) {\r\n    return <div>Book not found</div>;\r\n  }\r\n  const { name, author, image, description } = book;\r\n  return (\r\n    <BookPage name={name} author={author} image={image} description={description}/>\r\n  );\r\n};\r\nexport default BookList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}