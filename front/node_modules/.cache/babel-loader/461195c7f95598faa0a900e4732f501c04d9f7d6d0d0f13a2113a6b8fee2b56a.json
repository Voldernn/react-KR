{"ast":null,"code":"var _jsxFileName = \"E:\\\\kursach\\\\react-KR\\\\front\\\\src\\\\props\\\\BookList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport BookCard from './BookCard';\nimport BookPage from './BookPage';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowBook = () => {\n  _s();\n  const [book, setBook] = useState({});\n  const {\n    id\n  } = useParams();\n  axios.get(`http://localhost:5555/books/${id}`).then(response => {\n    setBook(response.data);\n  }).catch(error => {\n    console.log(error);\n  });\n};\n_s(ShowBook, \"aIpPAi+NaQ5WmuQcrp2ZrUHWwWQ=\", false, function () {\n  return [useParams];\n});\n_c = ShowBook;\nconst books = [{\n  id: 1,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 2,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 3,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 4,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 5,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 6,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 7,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 8,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 9,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}, {\n  id: 10,\n  name: 'Война и мир',\n  author: 'Л.Н. Толстой',\n  image: 'pics/69495367.jpg',\n  description: 'test'\n}];\nconst getBookById = id => {\n  return books.find(book => book.id === parseInt(id));\n};\nconst BookList = props => {\n  _s2();\n  const {\n    id\n  } = useParams();\n  const book = getBookById(id);\n  if (!id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-list\",\n      children: books.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        link: `/books/${book.id}`,\n        name: book.name,\n        author: book.author,\n        image: book.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this);\n  }\n  ;\n  if (!book) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Book not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    name,\n    author,\n    image,\n    description\n  } = book;\n  return /*#__PURE__*/_jsxDEV(BookPage, {\n    name: name,\n    author: author,\n    image: image,\n    description: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(BookList, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c2 = BookList;\nexport default BookList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ShowBook\");\n$RefreshReg$(_c2, \"BookList\");","map":{"version":3,"names":["React","BookCard","BookPage","useParams","axios","jsxDEV","_jsxDEV","ShowBook","_s","book","setBook","useState","id","get","then","response","data","catch","error","console","log","_c","books","name","author","image","description","getBookById","find","parseInt","BookList","props","_s2","className","children","map","link","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["E:/kursach/react-KR/front/src/props/BookList.js"],"sourcesContent":["import React from 'react';\r\nimport BookCard from './BookCard';\r\nimport BookPage from './BookPage';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ShowBook = () => {\r\n  const [book, setBook] = useState({});\r\n  const { id } = useParams();\r\n    axios\r\n      .get(`http://localhost:5555/books/${id}`)\r\n      .then((response) => {\r\n        setBook(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });}\r\nconst books = [\r\n  {id: 1, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 2, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 3, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 4, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 5, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 6, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 7, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 8, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 9, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},\r\n  {id: 10, name: 'Война и мир', author: 'Л.Н. Толстой', image: 'pics/69495367.jpg', description: 'test'},]\r\n\r\nconst getBookById = (id) => {\r\n  return books.find((book) => book.id === parseInt(id));\r\n};\r\n\r\nconst BookList = (props) => {\r\n  const { id } = useParams();\r\n  const book = getBookById(id);\r\n  if (!(id)){\r\n    return ( <div className=\"book-list\">\r\n    {books.map(book => (\r\n      <BookCard link={`/books/${book.id}`} name={book.name}\r\n      author={book.author} image={book.image} /> ))}\r\n      </div> );\r\n    };\r\n  if (!book) {\r\n    return <div>Book not found</div>;\r\n  }\r\n  const { name, author, image, description } = book;\r\n  return (\r\n    <BookPage name={name} author={author} image={image} description={description}/>\r\n  );\r\n};\r\nexport default BookList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}